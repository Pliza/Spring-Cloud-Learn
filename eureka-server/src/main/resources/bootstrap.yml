# 多环境通用配置
spring:
  application:
    name: eureka-server #first-cloud-server
  profiles:
    active: ${profiles.active:dev}  #指定生效的配置，可以通过  java -Dprofiles.active=dev -Dport=9999 -jar xx.jar

management:
  endpoints:
    web:
      exposure:
        include: "*" # 默认值是 true，敏感端口不对外暴露，默认情况下这个只显示服务是否启动（UP），其他 HealthIndicator（discoveryComposite、diskSpace 等） 信息不输出


---
server:
  port: ${port:9090}
spring:
  profiles: dev
  # 服务在启动时，会把自己当做一个 Eureka 客户端去注册到 Eureka 服务器上，且从服务器上拉取信息
  # 而该服务本身就是一个 Eureka 服务器（现在是配置 Eureka 集群，需要彼此相互注册）
eureka:
  server:
#    enable-self-preservation: false # 关闭自我保护机制，默认不关闭
#    evictionIntervalTimerInMs: 4000 #剔除无效 Eureka 实例的时间间隔，默认是 60s
  instance:
    hostname: localhost
  client:
    # 声明是否将自己的信息注册到 Eureka 服务器上
    register-with-eureka: false
    # 是否到 Eureka 服务器中抓取注册信息
    fetch-registry: false
    serviceUrl: # 注册到这些服务器的地址 Map of availability zone to list of fully qualified URLs to communicate with eureka server.
      defaultZone: http://localhost:${server.port}/eureka/ #对应 EurekaClientConfigBean 类和 PeerEurekaNodes#resolvePeerUrls 方法，把默认地址配置成自己的地址


---
server:
  port: 8762
spring:
  profiles: test
eureka:
  instance:
    hostname: Zhoust
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/